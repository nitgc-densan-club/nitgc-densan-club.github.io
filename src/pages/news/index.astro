---
import Layout from "../../layouts/Layout.astro";

/*一覧ページに表示する内容(詳細の要素と連携)*/
const NewsList = [
  {
    title: "件名:工華祭開催",
    date: "2025/10/25",
    from: "from:densan-club-nitgc",
    text: "工華祭1日目が行われました",
  },

  {
    title: "件名:後期開始",
    date: "2025/09/24",
    from: "from:densan-club-nitgc",
    text: "夏休みが終わり、後期が始まりました",
  },

  {
    title: "件名:新ホームページ公開",
    date: "2025/09/01",
    from: "from:densan-club-nitgc",
    text: "新ホームページを公開しました",
  },
];

/*詳細ページに表示する内容(一覧の要素と連携)*/
const DetailList = [
  {
    title: "件名:工華祭開催",
    date: "2025/10/25",
    from: "from:densan-club-nitgc",
    text: "工華祭1日目が行われました。電算部は図書館ホールで部誌の配布、部員作品の展示を行いました。明日(10/26)も同じ場所で行う予定です。",
  },

  {
    title: "件名:後期開始",
    date: "2025/09/24",
    from: "from:densan-club-nitgc",
    text: "夏休みが終わり、後期が始まりました。今年は工華祭のある年なので、部員一同張り切って準備に取り掛かっています。10月末に開催予定なので、ぜひ来てください！",
  },

  {
    title: "件名:新ホームページ公開",
    date: "2025/09/01",
    from: "from:densan-club-nitgc",
    text: "新ホームページを公開しました。web班のみんなで頑張って作ったホームページです。パソコンの画面をコンセプトにしていて、デザインや文字はドットになっています。",
  },
];

var i = 0;
var j = 0;
---

<script>
  /* 色コード一覧
白：F8FAEF
うす緑：CCDAB9
緑：98A786
暗いうす緑：8C9991
暗い緑：4C5B5C

*/

  //ニュース詳細のそれぞれに番号を付ける
  let DetailCards = document.getElementsByClassName("DetailCard");

  for (let k = 0; k <= DetailCards.length - 1; k++) {
    DetailCards[k].setAttribute("id", "hide" + k);
  }

  const content = document.getElementById("content");
  const detail = document.getElementById("detail");
  const back = document.getElementById("BackButton");

  /*一覧のどれかが押された際に一覧をすべて非表示にし(一覧をまとめているdivが非表示になる)押された一覧に対応する詳細を表示*/
  let ContentList = document.getElementsByClassName("NewsButton");

  for (let k = 0; k <= ContentList.length - 1; k++) {
    ContentList[k].addEventListener("click", () => {
      /*一覧非表示用の処理*/
      if (content!.style.display === "block") {
        content!.style.display = "none";
      }

      if (detail!.style.display === "none" || detail!.style.display === "") {
        detail!.style.display = "block";
      }

      /*詳細表示用の処理*/
      const SelectedDetailContent = document.getElementById("hide" + k);

      if (SelectedDetailContent!.style.display === "none") {
        SelectedDetailContent!.style.display = "block";
      }
    });
  }

  /*戻るボタンが押された際に詳細を非表示にし
  一覧を全て表示(一覧をまとめているdivが表示になる)*/

  back!.addEventListener("click", () => {
    for (let k = 0; k <= DetailCards.length - 1; k++) {
      const SDetailContent = document.getElementById("hide" + k);

      if (SDetailContent!.style.display === "block") {
        SDetailContent!.style.display = "none";
      }
    }

      /*詳細非表示用の処理*/
      if (detail!.style.display === "block") {
        detail!.style.display = "none";
      }

      /*一覧表示用の処理*/
      if (content!.style.display === "none") {
        content!.style.display = "block";
    }
  });
</script>

<Layout title="ニュース">
  <body>
    <div id="content" class="content" style="display:block;">
      {
        /*一覧を生成*/
        NewsList.map((data) => (
          <button class="NewsButton">
            <div class="news PointL">
              <div class="TopText">
                <p class="title">{NewsList[i].title}</p>
                <p class="date">{NewsList[i].date}</p>
              </div>
              <p class="from">{NewsList[i].from}</p>
              <div class="dotbox"></div>
              
              <p class="Text TextOmission">{NewsList[i++].text}</p>
            </div>
          </button>
        ))
      }
    </div>


    <div id="detail" class="detail" style="display: none;">
      <div class="FixedHeader">
        <button class="BackButton" id="BackButton">
          <div class="arrow"></div>
        </button>
      </div>
      <div class="BackBlank"></div>
      {
        /*詳細を生成*/
        DetailList.map((data) => (
          <div class="DetailCard" id="DetailCard" style="display: none;">
            <p class="date">{DetailList[j].date}</p>
            <p class="title">{DetailList[j].title}</p>
            <p class="from">{DetailList[j].from}</p>
            <div class="dotbox"></div>
            <p class="Text">{DetailList[j++].text}</p>
          </div>
        ))
      }
    </div>
  </body>
</Layout>

<style>
  /*文字関係(一覧と詳細で形式が変わらないため共通)*/

  p {
    margin: 4px 7px;
  }

  /*件名*/
  .title {
    font-size: 16px;
    text-align: left;
  }

  /*日時*/
  .date {
    font-size: 16px;
    text-align: right;
  }

  /*送信元*/
  .from {
    font-size: 15px;
    text-align: left;
  }

  /*本文*/
  .Text {
    text-align: left;
    font-size: 20px;
  }

  /*newsのみに適用するCSS*/

  .news {
    height: 200px;
    width: 100vw;
    background: #f8faef;
    border: thin #000 solid;
  }

  /*一覧で押すとそのニュースの詳細に飛ぶ*/
  .NewsButton {
    border: none;
    margin: 0px;
    padding: 0px;
    cursor: pointer;
  }

  /*件名(title)と日時(date)の並び方*/
  .TopText {
    display: flex;
    justify-content: space-between;
    width: 100%;
  }

  /*文章が長い場合に省略する*/
  .TextOmission {
    overflow: hidden;
    line-height: 1.5rem;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 5;
  }

  /*detailのみに適用するCSS*/

  .detail {
    background-color: #f8faef;
    height: 100%;
  }

  /*上側固定(戻るボタンなどが含まれる)*/
  .FixedHeader {
    background-color: #f8faef;
    width: 100%;
    top: 0px;
    left: 0px;
    border: thin #000 solid;
    position: fixed;
  }

  /*上側固定時に要素が隠れないようにするための空白*/
  .BackBlank {
    width: 100%;
    height: 30px;
  }

  /*一覧ページに戻るボタン*/
  .BackButton {
    width: 30px;
    height: 30px;
    margin: 0px;
    padding: 0px;
    border: none;
    cursor: pointer;
    background: #f8faef;
  }

  /*図形等*/

  /*点線(CSSで用意されているもの)*/
  hr {
    border: none;
    border-top: 1.5px dotted;
  }

  /*点線(四角形を組み合わせて作成 サイズ変更可能)*/
  .dotbox{
    width: 100%;
    height:5px;
    background-image: linear-gradient(to right, #333 45%, transparent 45%);
    background-size: 8px 2px;
    background-repeat: repeat-x;
    background-position: left bottom;
  }

  /*戻るボタン用の矢印*/
  .arrow {
    width: 12px;
    height: 12px;
    border: 3px solid;
    border-color: transparent transparent #565656 #565656;
    transform: translate(10px) rotate(45deg);
  }
</style>
